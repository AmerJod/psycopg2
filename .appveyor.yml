version : 2.x.{build}

clone_folder: C:\Project

environment:
    global:
        # MSVC Express 2008's setenv.cmd failes if /E:ON and /V:ON are not
        # enabled in the batch script interpreter
        #
        #      WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_compiler.cmd"
        CMD_IN_ENV: cmd /E:ON /V:ON /C .\appveyor\run_with_env.cmd

    matrix:
        # For Python versions available on Appveyor, see
        # https://www.appveyor.com/docs/build-environment/
      - {PYVER: "27", PYTHON_ARCH: "32"}
      # TODO: disabled for first tests: re-enable
      # - {PYVER: "27", PYTHON_ARCH: "64"}
      # - {PYVER: "37", PYTHON_ARCH: "32"}
      # - {PYVER: "37", PYTHON_ARCH: "64"}
      # - {PYVER: "36", PYTHON_ARCH: "32"}
      # - {PYVER: "36", PYTHON_ARCH: "64"}
      # - {PYVER: "35", PYTHON_ARCH: "32"}
      # - {PYVER: "35", PYTHON_ARCH: "64"}
      # - {PYVER: "34", PYTHON_ARCH: "32"}
      # - {PYVER: "34", PYTHON_ARCH: "64"}

    OPENSSL_VERSION: "1_1_1b"
    POSTGRES_VERSION: "11_2"

    PSYCOPG2_TESTDB: psycopg2_test
    PSYCOPG2_TESTDB_USER: postgres
    PSYCOPG2_TESTDB_PASSWORD: Password12!
    PSYCOPG2_TESTDB_HOST: localhost
    PSYCOPG2_TESTDB_PORT: 5432

    PGUSER: postgres
    PGPASSWORD: Password12!

    # The python used in the build process, not the one packages are built for
    PYEXE: C:\Python36\python.exe

matrix:
    fast_finish: false

services:
    # Note: if you change this service also change the paths to match
    # (see where Program Files\Postgres\9.6 is used)
    - postgresql96

cache:
  # Rebuild cache if following file changes
  # (See the file to zap the cache manually)
  - C:\Others -> scripts\appveyor.cache_rebuild

# Script called before repo cloning
init:
    # TODO: move functionalities out of init to drop this fetch problem
    - curl -fsSL -o "C:\\appveyor.py" https://raw.githubusercontent.com/psycopg/psycopg2/%APPVEYOR_REPO_COMMIT%/scripts/appveyor.py
    - "%PYEXE% C:\\appveyor.py init"

    # TODO: exporting variables below to be dropped once all the steps are
    # moved to the appveyor.py script.

    # Set env variable according to the build environment
    - SET PYTHON=C:\Python%PYVER%
    - IF "%PYTHON_ARCH%"=="64" SET PYTHON=%PYTHON%-x64

      # Py 2.7 = VS Ver. 9.0  (VS 2008)
      # Py 3.4 = VS Ver. 10.0 (VS 2010)
      # Py 3.5, 3.6, 3.7 = VS Ver. 14.0 (VS 2015)
    - IF "%PYVER%"=="27" SET VS_VER=9.0
    - IF "%PYVER%"=="34" SET VS_VER=10.0
    - IF "%PYVER%"=="35" SET VS_VER=14.0
    - IF "%PYVER%"=="36" SET VS_VER=14.0
    - IF "%PYVER%"=="37" SET VS_VER=14.0

    - IF "%VS_VER%"=="10.0" IF "%PYTHON_ARCH%"=="64" SET DISTUTILS_USE_SDK=1

    # Set Python to the path
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;C:\Program Files\Git\mingw64\bin;%PATH%

    # Setup the compiler based upon version and architecture
    - ECHO Configuring Compiler
    - IF "%PYTHON_ARCH%"=="32" (CALL "C:\\Program Files (x86)\\Microsoft Visual Studio %VS_VER%\\VC\\vcvarsall.bat" x86)
    - IF "%PYTHON_ARCH%"=="64" (CALL "C:\\Program Files (x86)\\Microsoft Visual Studio %VS_VER%\\VC\\vcvarsall.bat" amd64)


# Repository gets cloned, Cache is restored

install:
    - "%PYEXE% C:\\appveyor.py install"

build: off

# PostgreSQL server starts now

build_script:
    - "%PYEXE% C:\\appveyor.py build_script"

after_build:
    - "%PYEXE% C:\\appveyor.py after_build"

before_test:
    - "%PYEXE% C:\\appveyor.py before_test"

test_script:
    - "%PYEXE% C:\\appveyor.py test_script"


# vim: set ts=4 sts=4 sw=4:
